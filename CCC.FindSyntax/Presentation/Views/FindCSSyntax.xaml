<vncmvvm:ViewBase
    x:Class="CCC.FindSyntax.Presentation.Views.FindCSSyntax"
    x:Name="thisFindCSSyntax"    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:prism="http://www.codeplex.com/prism"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

    xmlns:cb="clr-namespace:CalcBinding;assembly=CalcBinding" 
    
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"     
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"  
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    
    xmlns:vncmvvm="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:local="clr-namespace:CCC.FindSyntax.Presentation.Views"
    
    xmlns:views="clr-namespace:CCC.FindSyntax.Presentation.Views"
    xmlns:viewModels="clr-namespace:CCC.FindSyntax.Presentation.ViewModels"
    
    xmlns:core="clr-namespace:VNCCodeCommandConsole.Core;assembly=VNCCodeCommandConsole.Core"
    prism:ViewModelLocator.AutoWireViewModel="True"
    
    mc:Ignorable="d"
    d:DesignStyle="{StaticResource vncDesignStyle}"
>
    <!--xmlns:core="clr-namespace:VNCCodeCommandConsole.Core;assembly=VNCCodeCommandConsole.Core"-->
    <UserControl.Resources>
        <Style x:Key="reStatementWalker" TargetType="views:RegExSyntaxWalker">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="Lavender" />
        </Style>
        <Style x:Key="reBlockStatementWalker" TargetType="views:RegExBlockSyntaxWalker">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="#FFE8FAE6" />
        </Style>
    </UserControl.Resources>

    <!-- NOTE(crhodes)
     Put in LayoutControl to get vertical scrolling
    -->
    <dxlc:LayoutControl Orientation="Vertical" MinWidth="300">

        <!-- NOTE(crhodes)
         This is for debugging
        -->
        <dxlc:LayoutItem Label="CommandParameter" LabelPosition="Top">
            <dxe:TextEdit 
            Text="{Binding Message}" TextWrapping="Wrap">
            </dxe:TextEdit>
        </dxlc:LayoutItem>

        <dxlc:LayoutItem>
            <dxe:CheckEdit x:Name="ceCollapse" Content="Collapsed Headers"
            	IsChecked="True"
                EditValueChanged="ceCollapse_EditValueChanged"/>
        </dxlc:LayoutItem>

        <views:RegExSyntaxWalker x:Name="cUsingDirective" 
                Style="{StaticResource reStatementWalker}" 
                ControlHeader="{Binding UsingDirectiveWalker.ControlHeader, Mode=TwoWay}"
                ButtonContent="{Binding UsingDirectiveWalker.ButtonContent, Mode=TwoWay}"
                CommandParameter="{Binding UsingDirectiveWalker.CommandParameter, Mode=TwoWay}"
                RegExLabel="{Binding UsingDirectiveWalker.RegExLabel, Mode=TwoWay}" 
                RegEx="{Binding UsingDirectiveWalker.RegEx, Mode=TwoWay}"
                UseRegEx="{Binding UsingDirectiveWalker.UseRegEx, Mode=TwoWay}"/>
        
        <views:RegExSyntaxWalker x:Name="cNamespaceDeclaration" 
                Style="{StaticResource reStatementWalker}" 
                ControlHeader="{Binding NamespaceDeclarationWalker.ControlHeader, Mode=TwoWay}"
                ButtonContent="{Binding NamespaceDeclarationWalker.ButtonContent, Mode=TwoWay}"
                CommandParameter="{Binding NamespaceDeclarationWalker.CommandParameter, Mode=TwoWay}"
                RegExLabel="{Binding NamespaceDeclarationWalker.RegExLabel, Mode=TwoWay}" 
                RegEx="{Binding NamespaceDeclarationWalker.RegEx, Mode=TwoWay}"
                UseRegEx="{Binding NamespaceDeclarationWalker.UseRegEx, Mode=TwoWay}"/>
     
        <views:RegExBlockSyntaxWalker x:Name="cClassDeclaration" 
                Style="{StaticResource reBlockStatementWalker}" 
                ControlHeader="{Binding ClassDeclarationWalker.ControlHeader, Mode=TwoWay}"
                ButtonContent="{Binding ClassDeclarationWalker.ButtonContent, Mode=TwoWay}"
                CommandParameter="{Binding ClassDeclarationWalker.CommandParameter, Mode=TwoWay}"
                RegExLabel="{Binding ClassDeclarationWalker.RegExLabel, Mode=TwoWay}" 
                RegEx="{Binding ClassDeclarationWalker.RegEx, Mode=TwoWay}"
                UseRegEx="{Binding ClassDeclarationWalker.UseRegEx, Mode=TwoWay}" 
			    DisplayBlock="{Binding ClassDeclarationWalker.DisplayBlock, Mode=TwoWay}"
			    DisplayBlockLabel="{Binding ClassDeclarationWalker.DisplayBlockLabel, Mode=TwoWay}" />

        <views:RegExBlockSyntaxWalker x:Name="cMethodDeclarationWalker" 
                Style="{StaticResource reBlockStatementWalker}" 
                ControlHeader="{Binding MethodDeclarationWalker.ControlHeader, Mode=TwoWay}"
                ButtonContent="{Binding MethodDeclarationWalker.ButtonContent, Mode=TwoWay}"
                CommandParameter="{Binding MethodDeclarationWalker.CommandParameter, Mode=TwoWay}"
                RegExLabel="{Binding MethodDeclarationWalker.RegExLabel, Mode=TwoWay}" 
                RegEx="{Binding MethodDeclarationWalker.RegEx, Mode=TwoWay}"
                UseRegEx="{Binding MethodDeclarationWalker.UseRegEx, Mode=TwoWay}"
                DisplayBlock="{Binding MethodDeclarationWalker.DisplayBlock, Mode=TwoWay}"
                DisplayBlockLabel="{Binding MethodDeclarationWalker.DisplayBlockLabel, Mode=TwoWay}" />

        <dxlc:LayoutGroup Header="Find FieldDeclaration Syntax" 
        	View="GroupBox"
            Orientation="Vertical"
            IsCollapsible="True" IsCollapsed="True">

            <dxlc:LayoutGroup
            	Orientation="Horizontal">

                <dxlc:LayoutGroup
                	Orientation="Vertical">
                    <dxlc:LayoutItem>
                        <dxe:CheckEdit Content="Use Regular Expressions"
                                       IsChecked="False"/>
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Label="Fields">
                        <dxe:TextEdit Text=".*"
                                      IsEnabled="{cb:Binding ElementName=ceFieldDeclarationUseRegEx, Path=IsChecked, Mode=OneWay}"
                                      ToolTip="Supports Regular Expressions"/>
                    </dxlc:LayoutItem>

                    <dx:GroupFrame Header="FieldDeclaration Location" VerticalAlignment="Top">
                        <dxe:ListBoxEdit Name="lbeFieldDeclarationLocation" 
                             ValueMember="Content" 
                             SelectedIndex="0"                                                         
                             ShowBorder="False" Background="{x:Null}">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:RadioListBoxEditStyleSettings />
                            </dxe:ListBoxEdit.StyleSettings>
                            <dxe:ListBoxEdit.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </dxe:ListBoxEdit.ItemsPanel>
                            <dxe:ListBoxEdit.Items>
                                <dxe:ListBoxEditItem Content="Class" />
                                <dxe:ListBoxEditItem Content="Module" />
                                <dxe:ListBoxEditItem Content="Structure" />
                            </dxe:ListBoxEdit.Items>
                        </dxe:ListBoxEdit>
                    </dx:GroupFrame>
                </dxlc:LayoutGroup>

            </dxlc:LayoutGroup>

            <dxlc:LayoutItem>
                <Button Content="FieldDeclaration Walker" 
                        Style="{StaticResource SyntaxQueryButton}"
                        Command="{Binding FieldDeclarationWalkerCommand}" 
                        Tag="FieldDeclarationWalker" />
            </dxlc:LayoutItem>

        </dxlc:LayoutGroup>
        
        <views:RegExBlockSyntaxWalker x:Name="cPropertyDeclaration" 
                    Style="{StaticResource reBlockStatementWalker}" 
                    ControlHeader="{Binding PropertyDeclarationWalker.ControlHeader, Mode=TwoWay}"
                    ButtonContent="{Binding PropertyDeclarationWalker.ButtonContent, Mode=TwoWay}"
                    CommandParameter="{Binding PropertyDeclarationWalker.CommandParameter, Mode=TwoWay}"
                    RegExLabel="{Binding PropertyDeclarationWalker.RegExLabel, Mode=TwoWay}" 
                    RegEx="{Binding PropertyDeclarationWalker.RegEx, Mode=TwoWay}"
                    UseRegEx="{Binding PropertyDeclarationWalker.UseRegEx, Mode=TwoWay}" 
        			DisplayBlock="{Binding PropertyDeclarationWalker.DisplayBlock, Mode=TwoWay}"
        			DisplayBlockLabel="{Binding PropertyDeclarationWalker.DisplayBlockLabel, Mode=TwoWay}" />

        <dxlc:LayoutGroup Header="Find StructureBlock Syntax" 
        	View="GroupBox" Orientation="Vertical"
            IsCollapsible="True" IsCollapsed="True"                          >

            <dxlc:LayoutGroup
            	Orientation="Horizontal">

                <dxlc:LayoutGroup
                	Orientation="Vertical">
                    <dxlc:LayoutItem>
                        <dxe:CheckEdit Content="Use Regular Expressions"
                                       IsChecked="False" />
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem Label="Structures">
                        <dxe:TextEdit Text=".*"
                                      IsEnabled="{cb:Binding ElementName=ceStructuresUseRegEx, Path=IsChecked, Mode=OneWay}"
                                      ToolTip="Supports Regular Expressions"/>
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem>
                        <dxe:CheckEdit x:Name="ceStructureShowFields" 
                                   Content="ShowFields" 
                                   IsChecked="True"/>
                    </dxlc:LayoutItem>

                    <dxlc:LayoutGroup
                    	Orientation="Vertical"
                        Visibility="{cb:Binding ElementName=ceStructureShowFields, Path=IsChecked}" >

                        <dxlc:LayoutItem>
                            <dxe:CheckEdit Content="Use Regular Expressions"
                                       IsChecked="False" />
                        </dxlc:LayoutItem>

                        <dxlc:LayoutItem Label="Fields" >
                            <dxe:TextEdit Text=".*" 
                                    IsEnabled="{cb:Binding ElementName=ceStructureFieldsUseRegEx, Path=IsChecked, Mode=OneWay}"
                                    ToolTip="Supports Regular Expressions"/>
                        </dxlc:LayoutItem>

                    </dxlc:LayoutGroup>

                </dxlc:LayoutGroup>

            </dxlc:LayoutGroup>

            <dxlc:LayoutItem>
                <Button Content="FindStructureBlock Walker" 
                        Style="{StaticResource SyntaxQueryButton}"
                        Command="{Binding FindStructureBlockWalkerCommand}" 
                        Tag="FindStructureBlockWalker" />
            </dxlc:LayoutItem>

        </dxlc:LayoutGroup>
        
    </dxlc:LayoutControl>
    
    <!--<StackPanel Grid.Row="2" Orientation="Horizontal" >
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="V:" />
                <Label Content="{Binding ElementName=thisFindVBSyntax, Path=InstanceCountV}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VM:" />
                <Label Content="{Binding InstanceCountVM}" />
            </StackPanel>
        </StackPanel>-->
</vncmvvm:ViewBase>