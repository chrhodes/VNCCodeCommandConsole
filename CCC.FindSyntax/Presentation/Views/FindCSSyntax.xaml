<vncmvvm:ViewBase
    x:Class="CCC.FindSyntax.Presentation.Views.FindCSSyntax"
    x:Name="thisFindCSSyntax"    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:prism="http://www.codeplex.com/prism"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

    xmlns:cb="clr-namespace:CalcBinding;assembly=CalcBinding" 
    
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"     
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdb="http://schemas.devexpress.com/winfx/2008/xaml/demobase"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"  
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    
    xmlns:vncmvvm="clr-namespace:VNC.Core.Mvvm;assembly=VNC.Core"
    xmlns:local="clr-namespace:CCC.FindSyntax.Presentation.Views"
    
    xmlns:views="clr-namespace:CCC.FindSyntax.Presentation.Views"
    xmlns:viewModels="clr-namespace:CCC.FindSyntax.Presentation.ViewModels"
    
    xmlns:core="clr-namespace:VNCCodeCommandConsole.Core;assembly=VNCCodeCommandConsole.Core"
    prism:ViewModelLocator.AutoWireViewModel="True"
    
    mc:Ignorable="d"
    d:DesignStyle="{StaticResource vncDesignStyle}"
>
    <!--xmlns:core="clr-namespace:VNCCodeCommandConsole.Core;assembly=VNCCodeCommandConsole.Core"-->
    <UserControl.Resources>
        <Style x:Key="reStatementWalker" TargetType="views:RegExSyntaxWalker">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="Lavender" />
        </Style>
        <Style x:Key="reBlockStatementWalker" TargetType="views:RegExBlockSyntaxWalker">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background" Value="#FFE8FAE6" />
        </Style>
    </UserControl.Resources>

    <!-- NOTE(crhodes)
     Put in LayoutControl to get vertical scrolling
    -->
    <dxlc:LayoutControl Orientation="Vertical" MinWidth="300">

        <!-- NOTE(crhodes)
         This is for debugging
        -->
        <dxlc:LayoutItem Label="CommandParameter" LabelPosition="Top">
            <dxe:TextEdit 
            Text="{Binding Message}" TextWrapping="Wrap">
            </dxe:TextEdit>
        </dxlc:LayoutItem>
        
        <views:RegExSyntaxWalker x:Name="cUsingDirective" 
                Style="{StaticResource reStatementWalker}" 
                ControlHeader="{Binding UsingDirectiveWalker.ControlHeader, Mode=TwoWay}"
                ButtonContent="{Binding UsingDirectiveWalker.ButtonContent, Mode=TwoWay}"
                CommandParameter="{Binding UsingDirectiveWalker.CommandParameter, Mode=TwoWay}"
                RegExLabel="{Binding UsingDirectiveWalker.RegExLabel, Mode=TwoWay}" 
                RegEx="{Binding UsingDirectiveWalker.RegEx, Mode=TwoWay}"
                UseRegEx="{Binding UsingDirectiveWalker.UseRegEx, Mode=TwoWay}"/>
        
        <views:RegExSyntaxWalker x:Name="cNamespaceDeclaration" 
                Style="{StaticResource reStatementWalker}" 
                ControlHeader="{Binding NamespaceDeclarationWalker.ControlHeader, Mode=TwoWay}"
                ButtonContent="{Binding NamespaceDeclarationWalker.ButtonContent, Mode=TwoWay}"
                CommandParameter="{Binding NamespaceDeclarationWalker.CommandParameter, Mode=TwoWay}"
                RegExLabel="{Binding NamespaceDeclarationWalker.RegExLabel, Mode=TwoWay}" 
                RegEx="{Binding NamespaceDeclarationWalker.RegEx, Mode=TwoWay}"
                UseRegEx="{Binding NamespaceDeclarationWalker.UseRegEx, Mode=TwoWay}"/>
     
        <views:RegExBlockSyntaxWalker x:Name="cClassDeclaration" 
                Style="{StaticResource reBlockStatementWalker}" 
                ControlHeader="{Binding ClassDeclarationWalker.ControlHeader, Mode=TwoWay}"
                ButtonContent="{Binding ClassDeclarationWalker.ButtonContent, Mode=TwoWay}"
                CommandParameter="{Binding ClassDeclarationWalker.CommandParameter, Mode=TwoWay}"
                RegExLabel="{Binding ClassDeclarationWalker.RegExLabel, Mode=TwoWay}" 
                RegEx="{Binding ClassDeclarationWalker.RegEx, Mode=TwoWay}"
                UseRegEx="{Binding ClassDeclarationWalker.UseRegEx, Mode=TwoWay}" 
			    DisplayBlock="{Binding ClassDeclarationWalker.DisplayBlock, Mode=TwoWay}"
			    DisplayBlockLabel="{Binding ClassDeclarationWalker.DisplayBlockLabel, Mode=TwoWay}" />


    </dxlc:LayoutControl>

    <!--<StackPanel Grid.Row="2" Orientation="Horizontal" >
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="V:" />
                <Label Content="{Binding ElementName=thisFindVBSyntax, Path=InstanceCountV}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5">
                <Label Content="VM:" />
                <Label Content="{Binding InstanceCountVM}" />
            </StackPanel>
        </StackPanel>-->
</vncmvvm:ViewBase>